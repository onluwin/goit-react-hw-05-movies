{"version":3,"file":"static/js/269.b3b7473d.chunk.js","mappings":"mTAEMA,EAAS,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAc,mCAAG,+FACtBC,EADsB,qCACuBH,GADvB,SAELC,EAAAA,EAAAA,IAAUE,GAFL,uBAEpBC,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,qDAMdC,EAAkB,mCAAG,WAAOC,EAAOC,GAAd,kFAC1BJ,EAD0B,+BACaH,EADb,kBAC6BM,GAD7B,SAETL,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFjB,uBAExBH,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,2CAAH,wDAMlBI,EAAiB,mCAAG,WAAOC,EAASF,GAAhB,kFACzBJ,EADyB,gBACDM,EADC,oBACkBT,GADlB,SAERC,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFlB,uBAEvBH,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,wDAMjBM,EAAU,mCAAG,WAAOD,EAASF,GAAhB,kFAClBJ,EADkB,iBACOM,EADP,4BACkCT,GADlC,UAEDC,EAAAA,EAAAA,GAAME,EAAc,CAAEI,OAAAA,IAFrB,uBAEhBH,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,wDAMVO,EAAY,mCAAG,WAAOF,EAASF,GAAhB,kFACpBJ,EADoB,iBACKM,EADL,4BACgCT,EADhC,wCAEHC,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFvB,uBAElBH,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,uD,mIC1BnBQ,GAAcC,EAAAA,EAAAA,OAAK,kBACvB,6BAAwBC,MAAK,SAAAC,GAAM,yBAC9BA,GAD8B,IAEjCC,QAASD,EAAOH,aAFiB,GADZ,IAOZK,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAYR,IAXAa,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACjBjB,EAASgB,EAAWhB,OAC1B,KACEI,EAAAA,EAAAA,IAAaF,EAASF,GAAQO,KAAKM,GAAYK,MAAMC,QAAQC,IAG9D,CAFC,MAAOC,GACPF,QAAQC,IAAIC,EACb,CACD,OAAO,kBAAML,EAAWM,OAAjB,CACR,GAAE,CAACpB,IAECU,EAGL,OAA+B,IAA3BA,EAAQW,QAAQC,QACX,qEAEF,SAACnB,EAAD,CAAaR,KAAMe,EAAQW,SACnC,C","sources":["API/fetchMovies.js","pages/MovieDetails/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '78b03767048a6745695471bf0cbbdec0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendings = async () => {\n  const searchString = `trending/movie/day?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString);\n  return data;\n};\n\nexport const fetchMoviesByQuery = async (query, signal) => {\n  const searchString = `search/movie?api_key=${apiKey}&query=${query}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchMovieDetails = async (movieId, signal) => {\n  const searchString = `movie/${movieId}?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchCasts = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/credits?api_key=${apiKey}`;\n  const { data } = await axios(searchString, { signal });\n  return data;\n};\n\nexport const fetchReviews = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/reviews?api_key=${apiKey}&append_to_response=reviews`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n","import { lazy, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../../API/fetchMovies';\n\nconst ReviewsList = lazy(() =>\n  import('./ReviewsList').then(module => ({\n    ...module,\n    default: module.ReviewsList,\n  }))\n);\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    const controller = new AbortController();\n    const signal = controller.signal;\n    try {\n      fetchReviews(movieId, signal).then(setReviews).catch(console.log);\n    } catch (error) {\n      console.log(error);\n    }\n    return () => controller.abort();\n  }, [movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  if (reviews.results.length === 0) {\n    return <p>We don't have any reviews for this movie</p>;\n  }\n  return <ReviewsList data={reviews.results} />;\n};\n"],"names":["apiKey","axios","fetchTrendings","searchString","data","fetchMoviesByQuery","query","signal","fetchMovieDetails","movieId","fetchCasts","fetchReviews","ReviewsList","lazy","then","module","default","Reviews","useState","reviews","setReviews","useParams","useEffect","controller","AbortController","catch","console","log","error","abort","results","length"],"sourceRoot":""}