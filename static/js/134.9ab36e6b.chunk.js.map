{"version":3,"file":"static/js/134.9ab36e6b.chunk.js","mappings":"mTAEMA,EAAS,mCAEfC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAc,mCAAG,+FACtBC,EADsB,qCACuBH,GADvB,SAELC,EAAAA,EAAAA,IAAUE,GAFL,uBAEpBC,EAFoB,EAEpBA,KAFoB,kBAGrBA,GAHqB,2CAAH,qDAMdC,EAAkB,mCAAG,WAAOC,EAAOC,GAAd,kFAC1BJ,EAD0B,+BACaH,EADb,kBAC6BM,GAD7B,SAETL,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFjB,uBAExBH,EAFwB,EAExBA,KAFwB,kBAGzBA,GAHyB,2CAAH,wDAMlBI,EAAiB,mCAAG,WAAOC,EAASF,GAAhB,kFACzBJ,EADyB,gBACDM,EADC,oBACkBT,GADlB,SAERC,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFlB,uBAEvBH,EAFuB,EAEvBA,KAFuB,kBAGxBA,GAHwB,2CAAH,wDAMjBM,EAAU,mCAAG,WAAOD,EAASF,GAAhB,kFAClBJ,EADkB,iBACOM,EADP,4BACkCT,GADlC,UAEDC,EAAAA,EAAAA,GAAME,EAAc,CAAEI,OAAAA,IAFrB,uBAEhBH,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,wDAMVO,EAAY,mCAAG,WAAOF,EAASF,GAAhB,kFACpBJ,EADoB,iBACKM,EADL,4BACgCT,EADhC,wCAEHC,EAAAA,EAAAA,IAAUE,EAAc,CAAEI,OAAAA,IAFvB,uBAElBH,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,uD,qIC5BZQ,EAAkBC,EAAAA,EAAAA,QAAH,8CAIfC,EAAYD,EAAAA,EAAAA,GAAH,oEAOTE,EAAcF,EAAAA,EAAAA,GAAH,wF,sJCPlBG,GAAaC,EAAAA,EAAAA,OAAK,kBACtB,qDAA0CC,MAAK,SAAAC,GAAM,yBAChDA,GADgD,IAEnDC,QAASD,EAAOH,YAFmC,GAD/B,IAMlBK,GAAaJ,EAAAA,EAAAA,OAAK,kBACtB,8BAA0CC,MAAK,SAAAC,GAAM,yBAChDA,GADgD,IAEnDC,QAASD,EAAOE,YAFmC,GAD/B,IAOXC,EAAS,SAAC,GAA2B,IAAD,EAAxBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,IAEnDC,EAAAA,EAAAA,YAAU,WACR,MAAK5B,GAAS0B,GAAd,CAEA,IAAMG,EAAa,IAAIC,gBACjB7B,EAAS4B,EAAW5B,OAC1B,KACEF,EAAAA,EAAAA,IAAmB2B,GAAwB1B,EAAOC,GAC/CW,MAAK,YAAkB,IAAfmB,EAAc,EAAdA,QACPb,EAAUa,EACX,IACAC,OAGJ,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACD,OAAO,WACLJ,EAAWO,OAEZ,CAhB8B,CAiBhC,GAAE,CAACV,EAAW1B,EAAOkB,IAOtB,OACE,iCACE,SAACR,EAAD,CAAY2B,aAPK,SAAC,EAAD,GAA+B,IAA5BrC,EAA2B,EAA3BA,MAAWsC,EAAgB,EAAhBA,UACjClB,EAASpB,GACTsC,IACAb,EAA0B,KAAVzB,EAAe,CAAC,EAAI,CAAE0B,UAAW1B,GAClD,IAIIiB,IACC,iCACE,SAAC,KAAD,oCACA,SAACF,EAAD,CAAYE,OAAQA,EAAQI,SAAUA,SAK/C,C","sources":["API/fetchMovies.js","pages/Home/Home.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '78b03767048a6745695471bf0cbbdec0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendings = async () => {\n  const searchString = `trending/movie/day?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString);\n  return data;\n};\n\nexport const fetchMoviesByQuery = async (query, signal) => {\n  const searchString = `search/movie?api_key=${apiKey}&query=${query}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchMovieDetails = async (movieId, signal) => {\n  const searchString = `movie/${movieId}?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchCasts = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/credits?api_key=${apiKey}`;\n  const { data } = await axios(searchString, { signal });\n  return data;\n};\n\nexport const fetchReviews = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/reviews?api_key=${apiKey}&append_to_response=reviews`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n","import styled from '@emotion/styled';\n\nexport const TrendingSection = styled.section`\n  margin-left: 20px;\n`;\n\nexport const HomeTitle = styled.h2`\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\n\n// Movies\n\nexport const MoviesTitle = styled.h3`\n  margin-top: 20px;\n  font-size: 23px;\n  margin-bottom: 15px;\n`;\n","import { fetchMoviesByQuery } from '../API/fetchMovies';\n\nimport { lazy, useEffect, useState } from 'react';\nimport { MoviesTitle } from './Home/Home.styled';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\nconst MoviesForm = lazy(() =>\n  import('../components/Movies/MoviesForm').then(module => ({\n    ...module,\n    default: module.MoviesForm,\n  }))\n);\nconst MoviesList = lazy(() =>\n  import('../components/Movies/MoviesList').then(module => ({\n    ...module,\n    default: module.MoviesList,\n  }))\n);\n\nexport const Movies = ({ movies, setMovies }) => {\n  const [query, setQuery] = useState('');\n  const location = useLocation();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n\n  useEffect(() => {\n    if (!query & !movieName) return;\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n    try {\n      fetchMoviesByQuery(movieName ? movieName : query, signal)\n        .then(({ results }) => {\n          setMovies(results);\n        })\n        .catch();\n    } catch (error) {\n      console.log(error);\n    }\n    return () => {\n      controller.abort();\n      // setMovies([]);\n    };\n  }, [movieName, query, setMovies]);\n\n  const onFormSubmit = ({ query }, { resetForm }) => {\n    setQuery(query);\n    resetForm();\n    setSearchParams(query === '' ? {} : { movieName: query });\n  };\n  return (\n    <>\n      <MoviesForm onFormSubmit={onFormSubmit} />\n      {movies && (\n        <>\n          <MoviesTitle>Movies by your query</MoviesTitle>\n          <MoviesList movies={movies} location={location} />\n        </>\n      )}\n    </>\n  );\n};\n"],"names":["apiKey","axios","fetchTrendings","searchString","data","fetchMoviesByQuery","query","signal","fetchMovieDetails","movieId","fetchCasts","fetchReviews","TrendingSection","styled","HomeTitle","MoviesTitle","MoviesForm","lazy","then","module","default","MoviesList","Movies","movies","setMovies","useState","setQuery","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","controller","AbortController","results","catch","error","console","log","abort","onFormSubmit","resetForm"],"sourceRoot":""}