{"version":3,"file":"static/js/806.21d2fa65.chunk.js","mappings":"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","sources":["API/fetchMovies.js","pages/MovieDetails/MovieDetails.jsx","Utils/transformUserScoreToPercent.js"],"sourcesContent":["import axios from 'axios';\n\nconst apiKey = '78b03767048a6745695471bf0cbbdec0';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendings = async () => {\n  const searchString = `trending/movie/day?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString);\n  return data;\n};\n\nexport const fetchMoviesByQuery = async (query, signal) => {\n  const searchString = `search/movie?api_key=${apiKey}&query=${query}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchMovieDetails = async (movieId, signal) => {\n  const searchString = `movie/${movieId}?api_key=${apiKey}`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n\nexport const fetchCasts = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/credits?api_key=${apiKey}`;\n  const { data } = await axios(searchString, { signal });\n  return data;\n};\n\nexport const fetchReviews = async (movieId, signal) => {\n  const searchString = `/movie/${movieId}/reviews?api_key=${apiKey}&append_to_response=reviews`;\n  const { data } = await axios.get(searchString, { signal });\n  return data;\n};\n","import { transformUserScore } from '../../Utils/transformUserScoreToPercent';\n\nimport defaultMovieImage from '../../images/default-movie-image.jpg';\n\nimport { fetchMovieDetails } from 'API/fetchMovies';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    const controller = new AbortController();\n    const signal = controller.signal;\n    try {\n      fetchMovieDetails(movieId, signal).then(setMovie).catch(console.log);\n    } catch (error) {\n      console.log(error);\n    }\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { poster_path, release_date, overview, title, genres, vote_average } =\n    movie;\n\n  const baseUrl = 'https://image.tmdb.org/t/p/';\n  const size = 'w300/';\n  const imageUrl = `${baseUrl}/${size}/${poster_path}`;\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={backLinkHref}>Go back</Link>\n      <div style={{ display: 'flex', marginTop: '20px' }}>\n        <img\n          src={poster_path ? imageUrl : defaultMovieImage}\n          alt={`${title} poster`}\n          width={300}\n          style={{ marginRight: '30px' }}\n        />\n        <div>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n          <p>User score: {transformUserScore(vote_average)}%</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(({ name }) => `${name} `)}</p>\n        </div>\n      </div>\n      <hr />\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <Link to={`cast`} state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to={`reviews`} state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n","export const transformUserScore = userScore => (userScore * 10).toFixed(0);\n"],"names":["apiKey","axios","fetchTrendings","searchString","data","fetchMoviesByQuery","query","signal","fetchMovieDetails","movieId","fetchCasts","fetchReviews","MovieDetails","useState","movie","setMovie","useParams","location","useLocation","useEffect","controller","AbortController","then","catch","console","log","error","abort","userScore","poster_path","release_date","overview","title","genres","vote_average","imageUrl","backLinkHref","state","from","to","style","display","marginTop","src","defaultMovieImage","alt","width","marginRight","slice","toFixed","map","name","Suspense","fallback"],"sourceRoot":""}